#![no_std]
#![no_main]

use cortex_m_rt::entry;

use cortex_m_semihosting::hprintln;
use ironfish_frost::participant::Secret;
use ironfish_frost_embedded::{init_heap, HEAP};
use rand::rngs::OsRng;

#[entry]
fn main() -> ! {
    init_heap();
    let mut rng = OsRng;
    let secret = Secret::random(&mut rng);
    let identity1 = secret.to_identity();
    hprintln!("Heap used {}", HEAP.used()).unwrap();

    hprintln!("secret {:?}", secret.serialize()).unwrap();
    hprintln!("identity {:?}", identity1.serialize()).unwrap();
    panic!("End of main");

    // identity 1, seed 1
    // let secret_bytes1 = [114, 136, 136, 22, 115, 240, 152, 86, 98, 56, 165, 29, 32, 55, 65, 45, 24, 99, 174, 191, 13, 71, 194, 15, 162, 59, 14, 56, 26, 80, 59, 66, 97, 138, 181, 122, 76, 83, 141, 3, 30, 45, 153, 171, 77, 168, 222, 0, 132, 148, 48, 164, 233, 121, 24, 223, 161, 68, 247, 116, 146, 68, 106, 182, 105];
    // let identity_bytes1 = [114, 86, 240, 217, 3, 5, 5, 151, 109, 35, 242, 2, 173, 214, 229, 169, 53, 81, 158, 56, 11, 208, 196, 125, 160, 214, 61, 34, 131, 114, 104, 159, 249, 68, 105, 129, 152, 91, 62, 174, 188, 2, 234, 183, 130, 166, 165, 242, 242, 96, 199, 49, 16, 147, 238, 81, 209, 111, 155, 102, 62, 105, 147, 111, 21, 182, 195, 205, 53, 190, 9, 56, 2, 162, 146, 165, 153, 152, 227, 114, 151, 222, 188, 228, 143, 177, 101, 235, 99, 28, 190, 223, 54, 137, 15, 157, 161, 231, 209, 43, 237, 221, 144, 4, 48, 180, 164, 190, 92, 249, 126, 210, 126, 196, 65, 44, 157, 137, 147, 7, 73, 246, 81, 116, 70, 52, 180, 34, 15];

    // identity 2, seed 2
    // let secret_bytes2 = [114, 161, 192, 95, 237, 141, 2, 175, 235, 116, 90, 68, 112, 75, 235, 161, 106, 152, 146, 47, 17, 51, 216, 163, 253, 73, 40, 165, 121, 163, 67, 175, 23, 38, 242, 52, 134, 156, 251, 3, 161, 179, 87, 236, 200, 67, 163, 161, 116, 213, 213, 224, 7, 98, 49, 208, 226, 90, 124, 169, 186, 230, 113, 153, 45];
    // let identity_bytes2 = [114, 124, 157, 239, 202, 84, 148, 135, 52, 15, 62, 107, 173, 82, 253, 13, 117, 75, 6, 135, 56, 156, 243, 44, 3, 170, 171, 36, 76, 131, 197, 32, 211, 118, 184, 117, 116, 149, 169, 123, 189, 69, 107, 185, 175, 126, 77, 86, 61, 231, 87, 234, 76, 58, 70, 225, 255, 199, 58, 137, 90, 6, 145, 115, 10, 253, 17, 225, 57, 67, 76, 154, 49, 98, 200, 53, 35, 189, 10, 66, 53, 228, 151, 246, 8, 223, 92, 111, 40, 239, 197, 196, 67, 219, 255, 86, 72, 149, 61, 78, 66, 192, 23, 15, 56, 192, 51, 193, 1, 41, 48, 18, 113, 30, 103, 158, 180, 122, 243, 29, 127, 167, 124, 139, 63, 140, 89, 57, 11];

    // identity 3, seed 3
    // let secret_bytes3 = [114, 187, 249, 168, 103, 43, 108, 7, 116, 175, 15, 108, 192, 94, 149, 21, 188, 205, 118, 159, 21, 30, 237, 55, 89, 87, 67, 19, 216, 245, 75, 28, 206, 194, 46, 238, 191, 228, 106, 4, 35, 56, 22, 45, 68, 223, 105, 67, 100, 22, 123, 28, 36, 76, 75, 193, 35, 111, 2, 223, 227, 135, 119, 124, 242];
    // let identity_bytes3 = [114, 47, 118, 27, 67, 116, 82, 234, 125, 80, 5, 23, 107, 34, 74, 188, 122, 185, 128, 46, 84, 194, 85, 11, 196, 124, 42, 106, 198, 207, 178, 239, 125, 211, 153, 172, 15, 45, 165, 83, 238, 112, 106, 39, 38, 123, 27, 222, 78, 247, 136, 167, 178, 166, 93, 241, 204, 143, 54, 49, 94, 198, 146, 12, 2, 235, 110, 74, 14, 199, 134, 138, 59, 77, 169, 1, 110, 37, 162, 251, 43, 189, 252, 47, 247, 111, 184, 115, 0, 100, 222, 32, 198, 254, 196, 5, 112, 235, 166, 222, 145, 16, 158, 63, 146, 80, 140, 77, 2, 95, 159, 242, 57, 82, 138, 247, 33, 155, 8, 11, 62, 221, 227, 105, 197, 113, 214, 249, 7];

    // identity 4, seed 4
    // let secret_bytes4 = [114, 212, 49, 241, 224, 201, 214, 96, 253, 234, 196, 147, 16, 114, 64, 136, 14, 2, 90, 15, 25, 9, 3, 204, 180, 100, 93, 128, 55, 72, 83, 138, 132, 93, 107, 169, 248, 45, 217, 4, 165, 189, 213, 110, 191, 122, 46, 228, 85, 87, 32, 88, 66, 53, 100, 178, 99, 132, 135, 21, 12, 41, 126, 96, 182];
    // let identity_bytes4 = [114, 74, 119, 222, 130, 99, 78, 38, 205, 60, 41, 201, 219, 43, 52, 110, 44, 77, 173, 209, 211, 24, 150, 205, 114, 137, 152, 201, 0, 183, 124, 109, 217, 186, 199, 249, 57, 92, 215, 245, 13, 84, 15, 12, 2, 145, 174, 16, 115, 127, 131, 134, 108, 3, 187, 108, 223, 118, 252, 46, 179, 12, 114, 174, 6, 33, 84, 161, 211, 175, 30, 62, 150, 14, 99, 245, 180, 206, 227, 15, 89, 135, 196, 8, 48, 174, 82, 34, 131, 224, 227, 229, 236, 53, 45, 160, 195, 219, 83, 102, 188, 78, 188, 109, 127, 118, 109, 22, 158, 77, 185, 84, 134, 139, 247, 42, 127, 100, 22, 154, 224, 89, 50, 178, 221, 238, 78, 14, 1];

    // identity 5, seed 5
    // let secret_bytes5 = [114, 237, 105, 58, 90, 102, 64, 184, 134, 37, 121, 187, 96, 133, 234, 252, 96, 55, 62, 127, 29, 244, 24, 96, 16, 114, 120, 238, 150, 154, 91, 247, 58, 249, 167, 99, 49, 117, 71, 5, 39, 66, 147, 175, 58, 21, 244, 133, 69, 152, 198, 148, 95, 31, 126, 164, 164, 154, 13, 75, 52, 203, 132, 67, 122];
    // let identity_bytes5 = [114, 252, 166, 249, 254, 182, 154, 244, 83, 249, 107, 83, 140, 114, 0, 150, 147, 139, 40, 52, 178, 185, 20, 254, 147, 121, 74, 47, 94, 164, 128, 190, 240, 175, 244, 104, 98, 2, 253, 35, 208, 19, 163, 96, 96, 28, 160, 144, 194, 87, 217, 205, 125, 153, 242, 142, 63, 212, 218, 84, 22, 128, 27, 253, 119, 181, 226, 203, 123, 115, 37, 202, 144, 184, 36, 153, 179, 80, 125, 190, 159, 82, 233, 53, 6, 89, 153, 86, 122, 77, 39, 8, 0, 23, 137, 169, 160, 111, 111, 41, 54, 243, 23, 56, 129, 142, 244, 248, 52, 189, 79, 1, 238, 157, 242, 96, 232, 163, 74, 49, 75, 165, 210, 180, 165, 87, 128, 168, 4];

    // identity 6, seed 6
    // let secret_bytes6 = [114, 7, 162, 131, 212, 4, 170, 17, 15, 96, 46, 226, 176, 153, 148, 112, 178, 108, 34, 239, 34, 223, 46, 245, 107, 128, 146, 91, 245, 237, 100, 100, 240, 149, 228, 29, 107, 190, 182, 6, 169, 199, 82, 239, 181, 176, 186, 38, 53, 217, 107, 208, 125, 9, 151, 149, 229, 175, 146, 128, 93, 109, 139, 38, 63];
    // let identity_bytes6 = [114, 216, 145, 75, 240, 16, 137, 127, 31, 114, 107, 208, 140, 221, 121, 233, 156, 114, 173, 57, 29, 42, 161, 90, 214, 239, 84, 235, 244, 44, 71, 4, 79, 225, 191, 19, 188, 196, 136, 165, 215, 22, 43, 61, 12, 67, 43, 77, 134, 51, 14, 130, 29, 35, 162, 65, 86, 192, 151, 136, 9, 42, 137, 196, 50, 244, 27, 48, 63, 112, 39, 23, 246, 199, 3, 100, 107, 92, 93, 247, 111, 165, 98, 81, 145, 251, 184, 71, 208, 168, 247, 236, 221, 185, 128, 85, 85, 123, 214, 76, 45, 18, 52, 128, 147, 129, 197, 74, 27, 3, 64, 70, 108, 79, 202, 170, 157, 123, 217, 39, 121, 27, 59, 110, 155, 122, 191, 214, 7];
}
