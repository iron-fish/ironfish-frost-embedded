#![no_std]
#![no_main]

use cortex_m_rt::entry;

use cortex_m_semihosting::hprintln;
use ironfish_frost::{dkg::{round1::PublicPackage, round2}, participant::Secret};
use ironfish_frost_embedded::{init_heap, HEAP};
use rand::rngs::OsRng;

#[entry]
fn main() -> ! {
    init_heap();
    let mut rng = OsRng;
    let num = 4;
    // let secret_bytes_1 = [114, 237, 105, 58, 90, 102, 64, 184, 134, 37, 121, 187, 96, 133, 234, 252, 96, 55, 62, 127, 29, 244, 24, 96, 16, 114, 120, 238, 150, 154, 91, 247, 58, 249, 167, 99, 49, 117, 71, 5, 39, 66, 147, 175, 58, 21, 244, 133, 69, 152, 198, 148, 95, 31, 126, 164, 164, 154, 13, 75, 52, 203, 132, 67, 122];
    // let secret_1 = Secret::deserialize_from(&secret_bytes_1[..]).unwrap();
    // let secret_bytes_2 = [114, 186, 250, 254, 176, 102, 172, 121, 161, 191, 101, 78, 174, 209, 30, 14, 20, 67, 230, 207, 109, 0, 5, 2, 117, 53, 93, 135, 16, 125, 17, 4, 138, 88, 106, 115, 30, 226, 248, 251, 187, 194, 245, 2, 3, 98, 240, 129, 149, 95, 168, 152, 142, 64, 54, 98, 75, 107, 112, 12, 113, 86, 138, 34, 48];
    // let secret_2 = Secret::deserialize_from(&secret_bytes_2[..]).unwrap();
    // let secret_bytes_3 = [114, 252, 255, 42, 196, 144, 177, 117, 62, 117, 77, 50, 130, 111, 242, 196, 146, 20, 18, 86, 10, 134, 153, 174, 237, 101, 78, 64, 160, 0, 119, 133, 52, 204, 194, 138, 233, 24, 96, 205, 241, 0, 116, 69, 115, 160, 172, 192, 208, 138, 46, 115, 42, 123, 183, 205, 35, 74, 255, 140, 228, 34, 97, 20, 95];
    // let secret_3 = Secret::deserialize_from(&secret_bytes_3[..]).unwrap();
    let secret_bytes_4 = [114, 242, 185, 253, 214, 35, 142, 236, 157, 137, 113, 164, 29, 157, 166, 93, 26, 234, 3, 85, 54, 198, 22, 166, 183, 67, 139, 88, 134, 101, 206, 184, 121, 150, 237, 233, 211, 88, 193, 185, 9, 58, 78, 183, 200, 15, 104, 131, 54, 91, 153, 101, 117, 15, 64, 34, 110, 118, 251, 12, 205, 112, 71, 89, 73];
    let secret_4 = Secret::deserialize_from(&secret_bytes_4[..]).unwrap();

    // let secret_package_1 = [29, 141, 81, 192, 74, 180, 57, 90, 206, 202, 252, 214, 93, 170, 27, 235, 106, 13, 204, 111, 54, 7, 202, 136, 141, 60, 77, 227, 55, 148, 99, 37, 222, 167, 42, 156, 254, 86, 65, 126, 193, 69, 53, 207, 164, 151, 18, 248, 1, 0, 0, 0, 172, 0, 0, 0, 250, 204, 90, 221, 204, 255, 53, 172, 35, 191, 230, 100, 68, 91, 148, 128, 47, 60, 69, 195, 43, 23, 230, 127, 245, 30, 100, 161, 238, 9, 238, 4, 43, 11, 110, 55, 223, 59, 178, 147, 46, 43, 180, 175, 0, 186, 182, 255, 236, 32, 163, 150, 222, 171, 189, 199, 64, 11, 156, 218, 143, 169, 232, 255, 224, 123, 49, 21, 220, 171, 197, 101, 238, 206, 182, 23, 23, 219, 88, 89, 80, 91, 244, 225, 239, 95, 162, 198, 165, 120, 66, 188, 192, 115, 78, 83, 161, 0, 62, 74, 206, 157, 112, 139, 177, 8, 177, 51, 5, 103, 177, 168, 113, 231, 97, 235, 189, 206, 84, 242, 235, 178, 59, 59, 80, 151, 196, 155, 88, 137, 238, 33, 252, 254, 178, 41, 49, 107, 81, 96, 52, 167, 121, 179, 49, 171, 32, 233, 15, 75, 167, 78, 179, 52, 24, 60, 64, 42, 98, 145, 159, 97, 135, 108, 0, 248, 89, 164, 250, 163, 40, 33, 167, 136, 212, 143, 5, 9, 63, 241, 176, 214, 127, 107, 132, 184, 227, 85, 122, 130, 65, 58, 14, 62, 194, 31, 103, 79, 87, 71, 81, 169, 238, 114];
    let package_bytes_1 = [114, 252, 166, 249, 254, 182, 154, 244, 83, 249, 107, 83, 140, 114, 0, 150, 147, 139, 40, 52, 178, 185, 20, 254, 147, 121, 74, 47, 94, 164, 128, 190, 240, 175, 244, 104, 98, 2, 253, 35, 208, 19, 163, 96, 96, 28, 160, 144, 194, 87, 217, 205, 125, 153, 242, 142, 63, 212, 218, 84, 22, 128, 27, 253, 119, 181, 226, 203, 123, 115, 37, 202, 144, 184, 36, 153, 179, 80, 125, 190, 159, 82, 233, 53, 6, 89, 153, 86, 122, 77, 39, 8, 0, 23, 137, 169, 160, 111, 111, 41, 54, 243, 23, 56, 129, 142, 244, 248, 52, 189, 79, 1, 238, 157, 242, 96, 232, 163, 74, 49, 75, 165, 210, 180, 165, 87, 128, 168, 4, 135, 0, 0, 0, 0, 195, 210, 5, 30, 2, 75, 64, 119, 180, 141, 52, 29, 96, 114, 81, 119, 45, 229, 33, 53, 143, 124, 110, 152, 251, 26, 71, 16, 239, 127, 133, 174, 55, 209, 241, 221, 227, 188, 165, 23, 112, 84, 206, 133, 31, 206, 146, 98, 199, 35, 110, 108, 40, 202, 200, 131, 13, 154, 179, 64, 30, 120, 78, 93, 88, 110, 65, 227, 32, 64, 172, 84, 227, 125, 133, 190, 18, 235, 49, 53, 86, 168, 175, 250, 78, 154, 99, 30, 196, 166, 31, 166, 138, 14, 34, 202, 14, 192, 183, 170, 180, 184, 48, 28, 83, 156, 57, 50, 186, 57, 210, 235, 214, 156, 171, 252, 31, 160, 212, 57, 189, 36, 218, 137, 91, 186, 159, 229, 147, 59, 3, 12, 27, 8, 216, 0, 0, 0, 151, 65, 22, 138, 144, 150, 127, 108, 255, 208, 87, 226, 110, 99, 74, 24, 120, 99, 20, 76, 98, 201, 226, 153, 203, 94, 209, 33, 46, 157, 140, 79, 37, 69, 220, 217, 70, 63, 247, 186, 75, 198, 156, 179, 9, 7, 108, 190, 4, 0, 0, 0, 32, 0, 0, 0, 82, 186, 177, 116, 54, 45, 9, 247, 233, 169, 168, 117, 250, 227, 57, 92, 147, 46, 83, 86, 187, 127, 162, 109, 118, 24, 239, 26, 200, 29, 206, 241, 253, 127, 80, 140, 76, 216, 118, 150, 170, 155, 119, 161, 168, 138, 36, 148, 175, 204, 212, 133, 63, 66, 42, 60, 2, 21, 24, 212, 1, 246, 48, 187, 128, 220, 216, 203, 124, 198, 73, 207, 179, 12, 146, 194, 84, 135, 176, 132, 210, 55, 202, 53, 104, 232, 6, 220, 234, 182, 223, 105, 192, 2, 220, 215, 244, 230, 137, 27, 210, 27, 218, 229, 57, 72, 106, 251, 95, 23, 207, 78, 250, 200, 128, 74, 86, 11, 26, 247, 183, 153, 238, 83, 7, 188, 147, 76, 213, 171, 30, 31, 237, 73, 24, 60, 16, 28, 122, 220, 86, 214, 205, 205, 74, 124, 168, 199, 245, 6, 206, 185, 94, 113, 172, 19, 249, 192, 247, 122, 148, 119, 79, 176, 183, 23, 136, 252];
    let package_1 = PublicPackage::deserialize_from(&package_bytes_1[..]).unwrap();
    // let secret_package_2 = [61, 78, 204, 82, 191, 254, 71, 227, 225, 198, 211, 88, 177, 186, 211, 23, 7, 82, 245, 93, 212, 219, 203, 98, 247, 29, 63, 15, 252, 95, 33, 85, 187, 113, 81, 209, 18, 36, 185, 239, 147, 238, 46, 99, 161, 59, 44, 136, 1, 0, 0, 0, 172, 0, 0, 0, 5, 161, 112, 58, 81, 156, 255, 183, 71, 117, 30, 206, 190, 93, 179, 210, 172, 129, 42, 255, 190, 190, 29, 71, 154, 209, 242, 216, 104, 162, 181, 214, 27, 85, 203, 113, 169, 57, 100, 246, 33, 221, 249, 197, 190, 87, 187, 72, 232, 19, 32, 211, 39, 163, 33, 76, 229, 214, 40, 64, 139, 240, 136, 238, 158, 159, 25, 185, 173, 189, 82, 37, 230, 40, 22, 45, 230, 36, 194, 66, 124, 234, 29, 132, 87, 117, 194, 50, 171, 220, 66, 240, 42, 134, 73, 12, 136, 210, 64, 53, 250, 54, 105, 133, 57, 110, 38, 116, 124, 109, 79, 250, 136, 171, 103, 53, 133, 46, 62, 153, 2, 195, 52, 29, 50, 193, 131, 37, 150, 103, 53, 176, 240, 55, 208, 222, 132, 227, 160, 242, 111, 34, 188, 9, 131, 216, 90, 226, 156, 165, 81, 135, 209, 246, 133, 139, 129, 107, 128, 208, 206, 94, 233, 51, 105, 208, 79, 13, 230, 209, 60, 76, 92, 69, 152, 224, 181, 105, 146, 157, 109, 214, 156, 117, 154, 6, 246, 235, 254, 172, 120, 217, 218, 48, 78, 61, 185, 233, 121, 119, 194, 206, 127, 199];
    let package_bytes_2 = [114, 97, 154, 23, 138, 59, 9, 33, 165, 233, 156, 69, 240, 37, 103, 57, 46, 95, 42, 198, 219, 213, 94, 99, 203, 227, 221, 23, 78, 44, 163, 150, 14, 152, 225, 5, 254, 73, 52, 14, 173, 14, 8, 46, 130, 119, 148, 210, 96, 53, 201, 196, 177, 208, 41, 76, 148, 231, 140, 247, 105, 220, 204, 155, 1, 202, 13, 61, 61, 231, 38, 58, 31, 212, 211, 67, 31, 61, 126, 169, 225, 79, 184, 10, 94, 234, 43, 52, 77, 77, 92, 123, 76, 12, 68, 161, 66, 156, 2, 243, 56, 139, 125, 88, 115, 51, 231, 95, 140, 94, 114, 158, 18, 169, 239, 173, 115, 123, 70, 70, 96, 52, 143, 95, 187, 228, 142, 1, 6, 135, 0, 0, 0, 0, 195, 210, 5, 30, 2, 162, 190, 167, 72, 247, 125, 135, 133, 153, 95, 246, 5, 99, 118, 21, 255, 231, 202, 5, 106, 172, 109, 183, 77, 251, 208, 57, 201, 57, 63, 19, 208, 229, 181, 15, 13, 235, 7, 22, 108, 60, 136, 155, 42, 44, 124, 22, 66, 186, 6, 19, 215, 117, 194, 176, 245, 14, 121, 158, 43, 221, 210, 85, 221, 64, 245, 99, 148, 117, 136, 146, 244, 126, 94, 209, 213, 59, 152, 104, 166, 13, 156, 123, 29, 27, 90, 38, 45, 175, 44, 153, 222, 51, 193, 38, 77, 142, 16, 229, 50, 220, 218, 11, 97, 75, 195, 218, 131, 56, 226, 216, 245, 180, 118, 43, 122, 6, 121, 38, 94, 69, 141, 223, 209, 225, 16, 207, 109, 14, 216, 0, 0, 0, 226, 199, 182, 112, 72, 103, 223, 24, 202, 107, 197, 252, 135, 185, 251, 144, 13, 94, 28, 39, 250, 2, 135, 82, 184, 14, 16, 255, 93, 140, 210, 19, 87, 22, 251, 54, 205, 155, 218, 248, 122, 13, 26, 109, 240, 144, 117, 87, 4, 0, 0, 0, 32, 0, 0, 0, 220, 254, 170, 177, 21, 93, 97, 207, 0, 82, 244, 175, 242, 201, 65, 147, 61, 164, 135, 44, 87, 145, 62, 12, 173, 237, 95, 130, 19, 236, 56, 221, 148, 143, 84, 206, 152, 155, 22, 243, 177, 228, 47, 172, 58, 199, 92, 207, 215, 118, 73, 143, 169, 157, 155, 119, 181, 75, 166, 230, 144, 108, 219, 50, 170, 21, 94, 22, 124, 103, 76, 68, 188, 79, 168, 149, 199, 128, 174, 42, 67, 3, 66, 71, 220, 136, 95, 81, 73, 170, 31, 255, 206, 140, 36, 162, 43, 150, 143, 85, 160, 132, 100, 72, 105, 125, 156, 139, 122, 210, 57, 6, 241, 218, 209, 65, 194, 229, 30, 229, 31, 224, 50, 216, 219, 49, 239, 201, 160, 51, 153, 171, 15, 36, 140, 14, 250, 246, 3, 58, 83, 170, 199, 163, 134, 118, 36, 156, 180, 40, 171, 209, 205, 132, 238, 177, 97, 212, 184, 146, 148, 119, 79, 176, 183, 23, 136, 252];
    let package_2 = PublicPackage::deserialize_from(&package_bytes_2[..]).unwrap();
    // let secret_package_3 = [67, 38, 161, 221, 55, 144, 217, 151, 99, 32, 138, 4, 144, 69, 246, 185, 145, 224, 169, 25, 197, 91, 63, 52, 224, 79, 172, 124, 44, 105, 239, 55, 239, 19, 153, 25, 123, 35, 52, 85, 194, 226, 107, 213, 208, 236, 221, 30, 1, 0, 0, 0, 172, 0, 0, 0, 255, 156, 155, 48, 106, 63, 92, 93, 167, 104, 43, 122, 139, 86, 160, 80, 241, 180, 185, 89, 127, 61, 235, 130, 168, 215, 73, 5, 179, 131, 87, 135, 166, 152, 25, 254, 37, 43, 88, 57, 105, 188, 72, 242, 137, 68, 143, 110, 139, 48, 121, 61, 247, 164, 0, 116, 104, 189, 198, 151, 227, 79, 204, 188, 109, 57, 143, 5, 242, 18, 247, 96, 102, 237, 22, 97, 166, 150, 95, 25, 90, 77, 127, 62, 16, 228, 118, 96, 23, 63, 116, 179, 110, 212, 128, 53, 179, 105, 211, 24, 135, 154, 9, 129, 83, 79, 251, 130, 58, 97, 8, 53, 45, 144, 231, 148, 43, 93, 254, 49, 48, 67, 134, 76, 227, 62, 162, 92, 185, 28, 165, 128, 113, 7, 61, 77, 81, 67, 218, 19, 42, 144, 116, 99, 79, 35, 182, 190, 171, 232, 237, 60, 224, 80, 72, 82, 63, 42, 96, 47, 202, 98, 15, 165, 148, 230, 119, 112, 10, 26, 153, 67, 144, 63, 131, 118, 251, 164, 204, 30, 228, 183, 96, 29, 198, 246, 186, 36, 212, 156, 133, 93, 67, 214, 18, 173, 253, 123, 46, 26, 188, 177, 35, 199];
    let package_bytes_3 = [114, 191, 69, 141, 0, 28, 209, 64, 134, 145, 198, 134, 15, 44, 43, 123, 141, 15, 142, 167, 0, 19, 159, 200, 155, 156, 25, 121, 251, 106, 99, 24, 253, 15, 186, 145, 34, 6, 218, 193, 111, 60, 68, 34, 212, 235, 82, 170, 45, 102, 0, 64, 199, 80, 41, 26, 24, 194, 132, 147, 119, 156, 142, 109, 22, 252, 113, 48, 23, 164, 123, 119, 132, 229, 12, 41, 154, 183, 193, 38, 139, 217, 158, 159, 53, 129, 111, 255, 165, 7, 174, 63, 121, 57, 46, 189, 255, 53, 55, 155, 31, 199, 47, 240, 179, 44, 249, 84, 56, 227, 128, 165, 18, 184, 208, 34, 220, 4, 232, 17, 219, 33, 235, 155, 0, 99, 101, 216, 5, 135, 0, 0, 0, 0, 195, 210, 5, 30, 2, 114, 246, 166, 167, 7, 7, 156, 250, 173, 64, 177, 195, 118, 108, 11, 160, 209, 178, 205, 83, 22, 137, 119, 19, 120, 178, 236, 103, 198, 216, 18, 37, 84, 193, 48, 125, 178, 31, 30, 170, 185, 145, 189, 141, 112, 36, 19, 225, 252, 91, 236, 71, 255, 232, 118, 138, 118, 215, 9, 105, 123, 215, 188, 152, 64, 133, 241, 85, 171, 83, 1, 167, 179, 155, 130, 174, 193, 68, 20, 89, 27, 215, 97, 126, 212, 86, 18, 190, 111, 146, 13, 87, 114, 30, 53, 7, 93, 201, 93, 168, 11, 193, 96, 206, 147, 111, 16, 120, 35, 33, 155, 217, 84, 243, 219, 220, 200, 250, 105, 168, 218, 135, 197, 225, 194, 245, 75, 62, 3, 216, 0, 0, 0, 115, 41, 90, 16, 145, 211, 209, 39, 1, 24, 196, 52, 98, 131, 104, 148, 234, 115, 39, 144, 179, 238, 44, 64, 138, 191, 144, 116, 200, 197, 202, 75, 122, 212, 44, 114, 175, 155, 148, 39, 7, 128, 7, 159, 161, 116, 18, 208, 4, 0, 0, 0, 32, 0, 0, 0, 119, 93, 245, 148, 235, 122, 141, 8, 139, 186, 157, 42, 15, 70, 130, 143, 199, 171, 212, 15, 186, 78, 238, 240, 112, 190, 103, 73, 247, 145, 104, 141, 160, 243, 25, 33, 162, 209, 61, 136, 99, 218, 100, 240, 43, 124, 170, 236, 109, 80, 0, 34, 18, 28, 11, 88, 242, 228, 120, 120, 178, 113, 49, 204, 182, 123, 226, 150, 126, 232, 46, 233, 75, 157, 124, 39, 192, 255, 98, 112, 210, 102, 254, 231, 53, 67, 165, 9, 241, 48, 168, 142, 2, 33, 16, 98, 76, 12, 170, 136, 90, 125, 130, 117, 233, 170, 213, 166, 71, 189, 202, 58, 228, 224, 225, 88, 175, 73, 41, 52, 166, 186, 127, 103, 188, 170, 217, 9, 187, 32, 161, 143, 16, 58, 246, 236, 246, 170, 16, 93, 113, 38, 39, 157, 211, 107, 107, 168, 50, 186, 25, 46, 64, 214, 80, 114, 0, 247, 49, 174, 148, 119, 79, 176, 183, 23, 136, 252];
    let package_3 = PublicPackage::deserialize_from(&package_bytes_3[..]).unwrap();
    let secret_package_4 = [217, 102, 81, 220, 223, 205, 194, 87, 12, 119, 241, 135, 6, 113, 100, 9, 88, 109, 63, 22, 176, 201, 218, 115, 102, 79, 237, 40, 79, 183, 118, 90, 117, 241, 65, 239, 112, 41, 141, 28, 8, 74, 178, 128, 247, 194, 126, 110, 1, 0, 0, 0, 172, 0, 0, 0, 54, 166, 166, 224, 7, 224, 177, 135, 42, 38, 6, 141, 163, 252, 58, 185, 215, 189, 71, 49, 151, 155, 203, 42, 27, 196, 44, 253, 208, 71, 100, 197, 250, 19, 184, 107, 165, 123, 190, 219, 50, 75, 254, 205, 145, 66, 242, 183, 109, 177, 121, 25, 242, 152, 17, 129, 177, 246, 131, 10, 250, 0, 71, 231, 161, 182, 26, 74, 251, 209, 130, 58, 25, 44, 205, 61, 172, 169, 253, 141, 175, 59, 254, 108, 161, 115, 54, 192, 178, 13, 98, 123, 188, 138, 211, 16, 218, 169, 251, 198, 205, 136, 135, 22, 104, 189, 136, 132, 202, 38, 2, 197, 205, 226, 253, 140, 90, 10, 232, 83, 241, 168, 3, 231, 133, 238, 97, 161, 22, 91, 246, 206, 83, 194, 133, 95, 66, 138, 181, 111, 106, 56, 192, 48, 163, 159, 155, 16, 18, 35, 104, 195, 9, 94, 191, 71, 254, 49, 207, 107, 217, 5, 70, 231, 239, 201, 148, 83, 192, 145, 82, 74, 111, 192, 40, 161, 145, 251, 51, 24, 244, 45, 158, 51, 121, 243, 176, 86, 134, 180, 119, 160, 71, 192, 120, 209, 85, 34, 28, 56, 183, 164, 121, 245];
    let package_bytes_4 = [114, 135, 138, 49, 165, 59, 16, 213, 197, 75, 246, 6, 53, 57, 78, 156, 184, 149, 151, 131, 0, 76, 26, 214, 74, 189, 36, 32, 148, 24, 6, 12, 206, 29, 141, 81, 192, 74, 180, 57, 90, 206, 202, 252, 214, 93, 170, 27, 235, 106, 13, 204, 111, 54, 7, 202, 136, 141, 60, 77, 227, 55, 148, 99, 37, 35, 90, 241, 13, 117, 143, 38, 222, 115, 47, 169, 131, 73, 211, 25, 68, 130, 186, 57, 226, 83, 202, 130, 88, 112, 68, 101, 183, 96, 12, 241, 58, 76, 246, 48, 5, 138, 22, 178, 32, 8, 134, 117, 219, 216, 27, 120, 97, 152, 6, 100, 64, 106, 154, 186, 137, 90, 191, 211, 159, 186, 14, 154, 7, 135, 0, 0, 0, 0, 195, 210, 5, 30, 2, 42, 59, 13, 247, 193, 215, 45, 156, 83, 11, 110, 74, 155, 183, 73, 118, 177, 135, 118, 226, 178, 94, 255, 1, 147, 196, 174, 210, 14, 238, 243, 145, 216, 154, 202, 77, 156, 16, 89, 207, 24, 14, 168, 203, 240, 59, 229, 50, 148, 43, 155, 202, 131, 229, 157, 201, 237, 29, 86, 40, 50, 142, 89, 139, 64, 48, 40, 86, 128, 125, 146, 120, 229, 236, 230, 31, 131, 125, 6, 30, 219, 186, 15, 119, 101, 4, 34, 104, 26, 92, 20, 10, 188, 254, 105, 254, 227, 169, 133, 125, 85, 142, 14, 220, 138, 222, 21, 66, 139, 231, 8, 122, 69, 231, 1, 70, 1, 162, 145, 137, 215, 142, 255, 217, 168, 3, 77, 118, 4, 216, 0, 0, 0, 156, 222, 93, 230, 193, 69, 147, 164, 234, 103, 249, 170, 35, 205, 150, 205, 8, 235, 110, 67, 233, 81, 46, 0, 120, 15, 13, 31, 158, 75, 230, 119, 127, 62, 174, 227, 110, 46, 141, 19, 35, 77, 8, 217, 13, 31, 137, 10, 4, 0, 0, 0, 32, 0, 0, 0, 170, 237, 216, 154, 73, 111, 252, 122, 182, 155, 22, 199, 31, 70, 112, 181, 59, 42, 19, 95, 214, 229, 32, 73, 141, 80, 66, 42, 188, 226, 196, 187, 98, 28, 22, 56, 12, 225, 176, 126, 64, 52, 48, 13, 222, 15, 244, 66, 73, 96, 108, 48, 122, 200, 118, 91, 81, 146, 220, 232, 234, 93, 160, 11, 113, 171, 20, 215, 231, 169, 93, 13, 53, 195, 152, 104, 73, 142, 166, 156, 31, 170, 149, 27, 10, 87, 155, 236, 94, 190, 78, 159, 89, 28, 248, 226, 226, 250, 135, 4, 254, 32, 162, 167, 12, 43, 245, 125, 89, 239, 116, 165, 194, 222, 177, 116, 2, 74, 182, 23, 232, 235, 142, 60, 5, 221, 88, 61, 110, 197, 18, 235, 176, 69, 187, 106, 242, 190, 24, 177, 115, 162, 250, 239, 59, 85, 191, 193, 169, 155, 85, 90, 250, 223, 48, 197, 59, 110, 64, 48, 148, 119, 79, 176, 183, 23, 136, 252];
    let package_4 = PublicPackage::deserialize_from(&package_bytes_4[..]).unwrap();

    let (encrypted_secret_package, round2_public_packages) = round2::round2(
        &secret_4,
        &secret_package_4,
        [&package_1, &package_2, &package_3, &package_4],
        rng,
    ).unwrap();
    hprintln!("let encrypted_secret_package_{} {:?}", num, encrypted_secret_package).unwrap();
    hprintln!("let round2_public_packages_{} {:?}", num, round2_public_packages.serialize()).unwrap();

    hprintln!("Heap used {}", HEAP.used()).unwrap();

    panic!("End of main");
}
