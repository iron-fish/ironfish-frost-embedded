#![no_std]
#![no_main]

use cortex_m_rt::entry;

use cortex_m_semihosting::hprintln;
use ironfish_frost::{dkg::{round1::PublicPackage, round2::CombinedPublicPackage, round3}, frost::frost::keys::dkg::round2, participant::Secret};
use ironfish_frost_embedded::{init_heap, HEAP};
use rand::rngs::OsRng;


#[entry]
fn main() -> ! {
    init_heap();
    let secret_bytes: [u8; 65] = [114, 187, 249, 168, 103, 43, 108, 7, 116, 175, 15, 108, 192, 94, 149, 21, 188, 205, 118, 159, 21, 30, 237, 55, 89, 87, 67, 19, 216, 245, 75, 28, 206, 194, 46, 238, 191, 228, 106, 4, 35, 56, 22, 45, 68, 223, 105, 67, 100, 22, 123, 28, 36, 76, 75, 193, 35, 111, 2, 223, 227, 135, 119, 124, 242];
    let secret = Secret::deserialize_from(&secret_bytes[..]).unwrap();

    let package_bytes_1 = [114, 252, 166, 249, 254, 182, 154, 244, 83, 249, 107, 83, 140, 114, 0, 150, 147, 139, 40, 52, 178, 185, 20, 254, 147, 121, 74, 47, 94, 164, 128, 190, 240, 175, 244, 104, 98, 2, 253, 35, 208, 19, 163, 96, 96, 28, 160, 144, 194, 87, 217, 205, 125, 153, 242, 142, 63, 212, 218, 84, 22, 128, 27, 253, 119, 181, 226, 203, 123, 115, 37, 202, 144, 184, 36, 153, 179, 80, 125, 190, 159, 82, 233, 53, 6, 89, 153, 86, 122, 77, 39, 8, 0, 23, 137, 169, 160, 111, 111, 41, 54, 243, 23, 56, 129, 142, 244, 248, 52, 189, 79, 1, 238, 157, 242, 96, 232, 163, 74, 49, 75, 165, 210, 180, 165, 87, 128, 168, 4, 135, 0, 0, 0, 0, 195, 210, 5, 30, 2, 75, 64, 119, 180, 141, 52, 29, 96, 114, 81, 119, 45, 229, 33, 53, 143, 124, 110, 152, 251, 26, 71, 16, 239, 127, 133, 174, 55, 209, 241, 221, 227, 188, 165, 23, 112, 84, 206, 133, 31, 206, 146, 98, 199, 35, 110, 108, 40, 202, 200, 131, 13, 154, 179, 64, 30, 120, 78, 93, 88, 110, 65, 227, 32, 64, 172, 84, 227, 125, 133, 190, 18, 235, 49, 53, 86, 168, 175, 250, 78, 154, 99, 30, 196, 166, 31, 166, 138, 14, 34, 202, 14, 192, 183, 170, 180, 184, 48, 28, 83, 156, 57, 50, 186, 57, 210, 235, 214, 156, 171, 252, 31, 160, 212, 57, 189, 36, 218, 137, 91, 186, 159, 229, 147, 59, 3, 12, 27, 8, 216, 0, 0, 0, 151, 65, 22, 138, 144, 150, 127, 108, 255, 208, 87, 226, 110, 99, 74, 24, 120, 99, 20, 76, 98, 201, 226, 153, 203, 94, 209, 33, 46, 157, 140, 79, 37, 69, 220, 217, 70, 63, 247, 186, 75, 198, 156, 179, 9, 7, 108, 190, 4, 0, 0, 0, 32, 0, 0, 0, 82, 186, 177, 116, 54, 45, 9, 247, 233, 169, 168, 117, 250, 227, 57, 92, 147, 46, 83, 86, 187, 127, 162, 109, 118, 24, 239, 26, 200, 29, 206, 241, 253, 127, 80, 140, 76, 216, 118, 150, 170, 155, 119, 161, 168, 138, 36, 148, 175, 204, 212, 133, 63, 66, 42, 60, 2, 21, 24, 212, 1, 246, 48, 187, 128, 220, 216, 203, 124, 198, 73, 207, 179, 12, 146, 194, 84, 135, 176, 132, 210, 55, 202, 53, 104, 232, 6, 220, 234, 182, 223, 105, 192, 2, 220, 215, 244, 230, 137, 27, 210, 27, 218, 229, 57, 72, 106, 251, 95, 23, 207, 78, 250, 200, 128, 74, 86, 11, 26, 247, 183, 153, 238, 83, 7, 188, 147, 76, 213, 171, 30, 31, 237, 73, 24, 60, 16, 28, 122, 220, 86, 214, 205, 205, 74, 124, 168, 199, 245, 6, 206, 185, 94, 113, 172, 19, 249, 192, 247, 122, 148, 119, 79, 176, 183, 23, 136, 252];
    let package_1 = PublicPackage::deserialize_from(&package_bytes_1[..]).unwrap();
    let package_bytes_2 = [114, 97, 154, 23, 138, 59, 9, 33, 165, 233, 156, 69, 240, 37, 103, 57, 46, 95, 42, 198, 219, 213, 94, 99, 203, 227, 221, 23, 78, 44, 163, 150, 14, 152, 225, 5, 254, 73, 52, 14, 173, 14, 8, 46, 130, 119, 148, 210, 96, 53, 201, 196, 177, 208, 41, 76, 148, 231, 140, 247, 105, 220, 204, 155, 1, 202, 13, 61, 61, 231, 38, 58, 31, 212, 211, 67, 31, 61, 126, 169, 225, 79, 184, 10, 94, 234, 43, 52, 77, 77, 92, 123, 76, 12, 68, 161, 66, 156, 2, 243, 56, 139, 125, 88, 115, 51, 231, 95, 140, 94, 114, 158, 18, 169, 239, 173, 115, 123, 70, 70, 96, 52, 143, 95, 187, 228, 142, 1, 6, 135, 0, 0, 0, 0, 195, 210, 5, 30, 2, 162, 190, 167, 72, 247, 125, 135, 133, 153, 95, 246, 5, 99, 118, 21, 255, 231, 202, 5, 106, 172, 109, 183, 77, 251, 208, 57, 201, 57, 63, 19, 208, 229, 181, 15, 13, 235, 7, 22, 108, 60, 136, 155, 42, 44, 124, 22, 66, 186, 6, 19, 215, 117, 194, 176, 245, 14, 121, 158, 43, 221, 210, 85, 221, 64, 245, 99, 148, 117, 136, 146, 244, 126, 94, 209, 213, 59, 152, 104, 166, 13, 156, 123, 29, 27, 90, 38, 45, 175, 44, 153, 222, 51, 193, 38, 77, 142, 16, 229, 50, 220, 218, 11, 97, 75, 195, 218, 131, 56, 226, 216, 245, 180, 118, 43, 122, 6, 121, 38, 94, 69, 141, 223, 209, 225, 16, 207, 109, 14, 216, 0, 0, 0, 226, 199, 182, 112, 72, 103, 223, 24, 202, 107, 197, 252, 135, 185, 251, 144, 13, 94, 28, 39, 250, 2, 135, 82, 184, 14, 16, 255, 93, 140, 210, 19, 87, 22, 251, 54, 205, 155, 218, 248, 122, 13, 26, 109, 240, 144, 117, 87, 4, 0, 0, 0, 32, 0, 0, 0, 220, 254, 170, 177, 21, 93, 97, 207, 0, 82, 244, 175, 242, 201, 65, 147, 61, 164, 135, 44, 87, 145, 62, 12, 173, 237, 95, 130, 19, 236, 56, 221, 148, 143, 84, 206, 152, 155, 22, 243, 177, 228, 47, 172, 58, 199, 92, 207, 215, 118, 73, 143, 169, 157, 155, 119, 181, 75, 166, 230, 144, 108, 219, 50, 170, 21, 94, 22, 124, 103, 76, 68, 188, 79, 168, 149, 199, 128, 174, 42, 67, 3, 66, 71, 220, 136, 95, 81, 73, 170, 31, 255, 206, 140, 36, 162, 43, 150, 143, 85, 160, 132, 100, 72, 105, 125, 156, 139, 122, 210, 57, 6, 241, 218, 209, 65, 194, 229, 30, 229, 31, 224, 50, 216, 219, 49, 239, 201, 160, 51, 153, 171, 15, 36, 140, 14, 250, 246, 3, 58, 83, 170, 199, 163, 134, 118, 36, 156, 180, 40, 171, 209, 205, 132, 238, 177, 97, 212, 184, 146, 148, 119, 79, 176, 183, 23, 136, 252];
    let package_2 = PublicPackage::deserialize_from(&package_bytes_2[..]).unwrap();
    let package_bytes_3 = [114, 191, 69, 141, 0, 28, 209, 64, 134, 145, 198, 134, 15, 44, 43, 123, 141, 15, 142, 167, 0, 19, 159, 200, 155, 156, 25, 121, 251, 106, 99, 24, 253, 15, 186, 145, 34, 6, 218, 193, 111, 60, 68, 34, 212, 235, 82, 170, 45, 102, 0, 64, 199, 80, 41, 26, 24, 194, 132, 147, 119, 156, 142, 109, 22, 252, 113, 48, 23, 164, 123, 119, 132, 229, 12, 41, 154, 183, 193, 38, 139, 217, 158, 159, 53, 129, 111, 255, 165, 7, 174, 63, 121, 57, 46, 189, 255, 53, 55, 155, 31, 199, 47, 240, 179, 44, 249, 84, 56, 227, 128, 165, 18, 184, 208, 34, 220, 4, 232, 17, 219, 33, 235, 155, 0, 99, 101, 216, 5, 135, 0, 0, 0, 0, 195, 210, 5, 30, 2, 114, 246, 166, 167, 7, 7, 156, 250, 173, 64, 177, 195, 118, 108, 11, 160, 209, 178, 205, 83, 22, 137, 119, 19, 120, 178, 236, 103, 198, 216, 18, 37, 84, 193, 48, 125, 178, 31, 30, 170, 185, 145, 189, 141, 112, 36, 19, 225, 252, 91, 236, 71, 255, 232, 118, 138, 118, 215, 9, 105, 123, 215, 188, 152, 64, 133, 241, 85, 171, 83, 1, 167, 179, 155, 130, 174, 193, 68, 20, 89, 27, 215, 97, 126, 212, 86, 18, 190, 111, 146, 13, 87, 114, 30, 53, 7, 93, 201, 93, 168, 11, 193, 96, 206, 147, 111, 16, 120, 35, 33, 155, 217, 84, 243, 219, 220, 200, 250, 105, 168, 218, 135, 197, 225, 194, 245, 75, 62, 3, 216, 0, 0, 0, 115, 41, 90, 16, 145, 211, 209, 39, 1, 24, 196, 52, 98, 131, 104, 148, 234, 115, 39, 144, 179, 238, 44, 64, 138, 191, 144, 116, 200, 197, 202, 75, 122, 212, 44, 114, 175, 155, 148, 39, 7, 128, 7, 159, 161, 116, 18, 208, 4, 0, 0, 0, 32, 0, 0, 0, 119, 93, 245, 148, 235, 122, 141, 8, 139, 186, 157, 42, 15, 70, 130, 143, 199, 171, 212, 15, 186, 78, 238, 240, 112, 190, 103, 73, 247, 145, 104, 141, 160, 243, 25, 33, 162, 209, 61, 136, 99, 218, 100, 240, 43, 124, 170, 236, 109, 80, 0, 34, 18, 28, 11, 88, 242, 228, 120, 120, 178, 113, 49, 204, 182, 123, 226, 150, 126, 232, 46, 233, 75, 157, 124, 39, 192, 255, 98, 112, 210, 102, 254, 231, 53, 67, 165, 9, 241, 48, 168, 142, 2, 33, 16, 98, 76, 12, 170, 136, 90, 125, 130, 117, 233, 170, 213, 166, 71, 189, 202, 58, 228, 224, 225, 88, 175, 73, 41, 52, 166, 186, 127, 103, 188, 170, 217, 9, 187, 32, 161, 143, 16, 58, 246, 236, 246, 170, 16, 93, 113, 38, 39, 157, 211, 107, 107, 168, 50, 186, 25, 46, 64, 214, 80, 114, 0, 247, 49, 174, 148, 119, 79, 176, 183, 23, 136, 252];
    let package_3 = PublicPackage::deserialize_from(&package_bytes_3[..]).unwrap();
    let package_bytes_4 = [114, 135, 138, 49, 165, 59, 16, 213, 197, 75, 246, 6, 53, 57, 78, 156, 184, 149, 151, 131, 0, 76, 26, 214, 74, 189, 36, 32, 148, 24, 6, 12, 206, 29, 141, 81, 192, 74, 180, 57, 90, 206, 202, 252, 214, 93, 170, 27, 235, 106, 13, 204, 111, 54, 7, 202, 136, 141, 60, 77, 227, 55, 148, 99, 37, 35, 90, 241, 13, 117, 143, 38, 222, 115, 47, 169, 131, 73, 211, 25, 68, 130, 186, 57, 226, 83, 202, 130, 88, 112, 68, 101, 183, 96, 12, 241, 58, 76, 246, 48, 5, 138, 22, 178, 32, 8, 134, 117, 219, 216, 27, 120, 97, 152, 6, 100, 64, 106, 154, 186, 137, 90, 191, 211, 159, 186, 14, 154, 7, 135, 0, 0, 0, 0, 195, 210, 5, 30, 2, 42, 59, 13, 247, 193, 215, 45, 156, 83, 11, 110, 74, 155, 183, 73, 118, 177, 135, 118, 226, 178, 94, 255, 1, 147, 196, 174, 210, 14, 238, 243, 145, 216, 154, 202, 77, 156, 16, 89, 207, 24, 14, 168, 203, 240, 59, 229, 50, 148, 43, 155, 202, 131, 229, 157, 201, 237, 29, 86, 40, 50, 142, 89, 139, 64, 48, 40, 86, 128, 125, 146, 120, 229, 236, 230, 31, 131, 125, 6, 30, 219, 186, 15, 119, 101, 4, 34, 104, 26, 92, 20, 10, 188, 254, 105, 254, 227, 169, 133, 125, 85, 142, 14, 220, 138, 222, 21, 66, 139, 231, 8, 122, 69, 231, 1, 70, 1, 162, 145, 137, 215, 142, 255, 217, 168, 3, 77, 118, 4, 216, 0, 0, 0, 156, 222, 93, 230, 193, 69, 147, 164, 234, 103, 249, 170, 35, 205, 150, 205, 8, 235, 110, 67, 233, 81, 46, 0, 120, 15, 13, 31, 158, 75, 230, 119, 127, 62, 174, 227, 110, 46, 141, 19, 35, 77, 8, 217, 13, 31, 137, 10, 4, 0, 0, 0, 32, 0, 0, 0, 170, 237, 216, 154, 73, 111, 252, 122, 182, 155, 22, 199, 31, 70, 112, 181, 59, 42, 19, 95, 214, 229, 32, 73, 141, 80, 66, 42, 188, 226, 196, 187, 98, 28, 22, 56, 12, 225, 176, 126, 64, 52, 48, 13, 222, 15, 244, 66, 73, 96, 108, 48, 122, 200, 118, 91, 81, 146, 220, 232, 234, 93, 160, 11, 113, 171, 20, 215, 231, 169, 93, 13, 53, 195, 152, 104, 73, 142, 166, 156, 31, 170, 149, 27, 10, 87, 155, 236, 94, 190, 78, 159, 89, 28, 248, 226, 226, 250, 135, 4, 254, 32, 162, 167, 12, 43, 245, 125, 89, 239, 116, 165, 194, 222, 177, 116, 2, 74, 182, 23, 232, 235, 142, 60, 5, 221, 88, 61, 110, 197, 18, 235, 176, 69, 187, 106, 242, 190, 24, 177, 115, 162, 250, 239, 59, 85, 191, 193, 169, 155, 85, 90, 250, 223, 48, 197, 59, 110, 64, 48, 148, 119, 79, 176, 183, 23, 136, 252];
    let package_4 = PublicPackage::deserialize_from(&package_bytes_4[..]).unwrap();

    let encrypted_secret_package_1 = [175, 244, 104, 98, 2, 253, 35, 208, 19, 163, 96, 96, 28, 160, 144, 194, 87, 217, 205, 125, 153, 242, 142, 63, 212, 218, 84, 22, 128, 27, 253, 119, 52, 113, 78, 121, 53, 237, 17, 229, 50, 218, 139, 4, 20, 196, 16, 246, 1, 0, 0, 0, 136, 0, 0, 0, 155, 168, 128, 32, 224, 239, 217, 92, 103, 93, 181, 192, 144, 204, 163, 200, 62, 45, 78, 113, 17, 186, 98, 69, 107, 38, 38, 240, 233, 170, 17, 112, 35, 181, 79, 34, 98, 111, 169, 223, 199, 48, 247, 7, 136, 105, 239, 224, 52, 219, 113, 36, 166, 19, 52, 58, 241, 110, 209, 58, 252, 95, 108, 187, 11, 145, 142, 253, 204, 191, 169, 236, 167, 76, 41, 203, 193, 225, 192, 123, 119, 85, 12, 229, 243, 186, 46, 105, 103, 235, 127, 234, 70, 83, 128, 197, 18, 240, 58, 242, 140, 210, 45, 16, 20, 155, 74, 53, 21, 198, 4, 6, 108, 124, 236, 200, 10, 237, 128, 191, 202, 105, 248, 109, 168, 178, 228, 96, 88, 6, 214, 67, 8, 195, 27, 148, 68, 26, 2, 41, 245, 159, 144, 177, 33, 122, 66, 144, 0, 181, 125, 91, 73, 243, 48, 153, 167, 134, 252, 16, 10, 85, 66, 81, 65, 177, 202, 160];
    let round2_public_packages_1_bytes = [114, 252, 166, 249, 254, 182, 154, 244, 83, 249, 107, 83, 140, 114, 0, 150, 147, 139, 40, 52, 178, 185, 20, 254, 147, 121, 74, 47, 94, 164, 128, 190, 240, 175, 244, 104, 98, 2, 253, 35, 208, 19, 163, 96, 96, 28, 160, 144, 194, 87, 217, 205, 125, 153, 242, 142, 63, 212, 218, 84, 22, 128, 27, 253, 119, 181, 226, 203, 123, 115, 37, 202, 144, 184, 36, 153, 179, 80, 125, 190, 159, 82, 233, 53, 6, 89, 153, 86, 122, 77, 39, 8, 0, 23, 137, 169, 160, 111, 111, 41, 54, 243, 23, 56, 129, 142, 244, 248, 52, 189, 79, 1, 238, 157, 242, 96, 232, 163, 74, 49, 75, 165, 210, 180, 165, 87, 128, 168, 4, 3, 0, 0, 0, 114, 191, 69, 141, 0, 28, 209, 64, 134, 145, 198, 134, 15, 44, 43, 123, 141, 15, 142, 167, 0, 19, 159, 200, 155, 156, 25, 121, 251, 106, 99, 24, 253, 15, 186, 145, 34, 6, 218, 193, 111, 60, 68, 34, 212, 235, 82, 170, 45, 102, 0, 64, 199, 80, 41, 26, 24, 194, 132, 147, 119, 156, 142, 109, 22, 252, 113, 48, 23, 164, 123, 119, 132, 229, 12, 41, 154, 183, 193, 38, 139, 217, 158, 159, 53, 129, 111, 255, 165, 7, 174, 63, 121, 57, 46, 189, 255, 53, 55, 155, 31, 199, 47, 240, 179, 44, 249, 84, 56, 227, 128, 165, 18, 184, 208, 34, 220, 4, 232, 17, 219, 33, 235, 155, 0, 99, 101, 216, 5, 37, 0, 0, 0, 0, 195, 210, 5, 30, 189, 235, 251, 235, 226, 213, 206, 225, 60, 235, 165, 97, 216, 206, 112, 201, 101, 57, 33, 214, 227, 86, 81, 223, 251, 42, 144, 208, 75, 252, 166, 4, 136, 192, 223, 165, 61, 91, 193, 230, 114, 135, 138, 49, 165, 59, 16, 213, 197, 75, 246, 6, 53, 57, 78, 156, 184, 149, 151, 131, 0, 76, 26, 214, 74, 189, 36, 32, 148, 24, 6, 12, 206, 29, 141, 81, 192, 74, 180, 57, 90, 206, 202, 252, 214, 93, 170, 27, 235, 106, 13, 204, 111, 54, 7, 202, 136, 141, 60, 77, 227, 55, 148, 99, 37, 35, 90, 241, 13, 117, 143, 38, 222, 115, 47, 169, 131, 73, 211, 25, 68, 130, 186, 57, 226, 83, 202, 130, 88, 112, 68, 101, 183, 96, 12, 241, 58, 76, 246, 48, 5, 138, 22, 178, 32, 8, 134, 117, 219, 216, 27, 120, 97, 152, 6, 100, 64, 106, 154, 186, 137, 90, 191, 211, 159, 186, 14, 154, 7, 37, 0, 0, 0, 0, 195, 210, 5, 30, 193, 134, 199, 93, 173, 154, 231, 13, 246, 4, 218, 106, 57, 229, 169, 7, 144, 221, 200, 247, 8, 8, 137, 121, 215, 102, 102, 217, 69, 85, 65, 5, 136, 192, 223, 165, 61, 91, 193, 230, 114, 97, 154, 23, 138, 59, 9, 33, 165, 233, 156, 69, 240, 37, 103, 57, 46, 95, 42, 198, 219, 213, 94, 99, 203, 227, 221, 23, 78, 44, 163, 150, 14, 152, 225, 5, 254, 73, 52, 14, 173, 14, 8, 46, 130, 119, 148, 210, 96, 53, 201, 196, 177, 208, 41, 76, 148, 231, 140, 247, 105, 220, 204, 155, 1, 202, 13, 61, 61, 231, 38, 58, 31, 212, 211, 67, 31, 61, 126, 169, 225, 79, 184, 10, 94, 234, 43, 52, 77, 77, 92, 123, 76, 12, 68, 161, 66, 156, 2, 243, 56, 139, 125, 88, 115, 51, 231, 95, 140, 94, 114, 158, 18, 169, 239, 173, 115, 123, 70, 70, 96, 52, 143, 95, 187, 228, 142, 1, 6, 37, 0, 0, 0, 0, 195, 210, 5, 30, 17, 9, 214, 150, 97, 175, 160, 191, 0, 48, 87, 17, 124, 19, 7, 159, 152, 130, 139, 31, 86, 57, 140, 90, 94, 148, 7, 214, 228, 176, 45, 1, 136, 192, 223, 165, 61, 91, 193, 230];
    let round2_public_packages_1 = CombinedPublicPackage::deserialize_from(&round2_public_packages_1_bytes[..]).unwrap();
    // let encrypted_secret_package_2 = [175, 244, 104, 98, 2, 253, 35, 208, 19, 163, 96, 96, 28, 160, 144, 194, 87, 217, 205, 125, 153, 242, 142, 63, 212, 218, 84, 22, 128, 27, 253, 119, 52, 149, 237, 152, 58, 35, 177, 83, 209, 84, 146, 150, 93, 166, 161, 18, 1, 0, 0, 0, 136, 0, 0, 0, 37, 213, 243, 72, 40, 90, 208, 138, 228, 35, 152, 255, 65, 212, 249, 60, 128, 72, 216, 243, 255, 32, 149, 161, 202, 122, 236, 139, 255, 117, 91, 68, 70, 131, 152, 42, 138, 58, 242, 94, 237, 184, 107, 101, 99, 22, 199, 51, 194, 15, 39, 227, 178, 156, 81, 233, 189, 184, 193, 103, 15, 244, 11, 187, 11, 145, 142, 253, 37, 65, 121, 16, 221, 5, 179, 46, 42, 239, 65, 83, 241, 2, 44, 149, 104, 30, 179, 248, 209, 193, 216, 72, 194, 6, 23, 59, 250, 62, 244, 193, 213, 194, 53, 109, 171, 82, 217, 70, 231, 220, 253, 235, 99, 110, 150, 162, 122, 35, 16, 101, 37, 24, 8, 134, 222, 133, 39, 19, 235, 149, 96, 190, 52, 251, 180, 176, 56, 155, 25, 145, 246, 86, 165, 141, 37, 126, 67, 234, 78, 13, 238, 207, 168, 95, 110, 250, 186, 101, 14, 45, 151, 30, 50, 87, 65, 177, 202, 160];
    let round2_public_packages_2_bytes = [114, 97, 154, 23, 138, 59, 9, 33, 165, 233, 156, 69, 240, 37, 103, 57, 46, 95, 42, 198, 219, 213, 94, 99, 203, 227, 221, 23, 78, 44, 163, 150, 14, 152, 225, 5, 254, 73, 52, 14, 173, 14, 8, 46, 130, 119, 148, 210, 96, 53, 201, 196, 177, 208, 41, 76, 148, 231, 140, 247, 105, 220, 204, 155, 1, 202, 13, 61, 61, 231, 38, 58, 31, 212, 211, 67, 31, 61, 126, 169, 225, 79, 184, 10, 94, 234, 43, 52, 77, 77, 92, 123, 76, 12, 68, 161, 66, 156, 2, 243, 56, 139, 125, 88, 115, 51, 231, 95, 140, 94, 114, 158, 18, 169, 239, 173, 115, 123, 70, 70, 96, 52, 143, 95, 187, 228, 142, 1, 6, 3, 0, 0, 0, 114, 191, 69, 141, 0, 28, 209, 64, 134, 145, 198, 134, 15, 44, 43, 123, 141, 15, 142, 167, 0, 19, 159, 200, 155, 156, 25, 121, 251, 106, 99, 24, 253, 15, 186, 145, 34, 6, 218, 193, 111, 60, 68, 34, 212, 235, 82, 170, 45, 102, 0, 64, 199, 80, 41, 26, 24, 194, 132, 147, 119, 156, 142, 109, 22, 252, 113, 48, 23, 164, 123, 119, 132, 229, 12, 41, 154, 183, 193, 38, 139, 217, 158, 159, 53, 129, 111, 255, 165, 7, 174, 63, 121, 57, 46, 189, 255, 53, 55, 155, 31, 199, 47, 240, 179, 44, 249, 84, 56, 227, 128, 165, 18, 184, 208, 34, 220, 4, 232, 17, 219, 33, 235, 155, 0, 99, 101, 216, 5, 37, 0, 0, 0, 0, 195, 210, 5, 30, 123, 83, 73, 17, 94, 111, 193, 21, 232, 89, 190, 87, 96, 153, 212, 77, 97, 65, 113, 228, 102, 214, 24, 207, 95, 68, 111, 56, 119, 143, 64, 7, 136, 192, 223, 165, 61, 91, 193, 230, 114, 135, 138, 49, 165, 59, 16, 213, 197, 75, 246, 6, 53, 57, 78, 156, 184, 149, 151, 131, 0, 76, 26, 214, 74, 189, 36, 32, 148, 24, 6, 12, 206, 29, 141, 81, 192, 74, 180, 57, 90, 206, 202, 252, 214, 93, 170, 27, 235, 106, 13, 204, 111, 54, 7, 202, 136, 141, 60, 77, 227, 55, 148, 99, 37, 35, 90, 241, 13, 117, 143, 38, 222, 115, 47, 169, 131, 73, 211, 25, 68, 130, 186, 57, 226, 83, 202, 130, 88, 112, 68, 101, 183, 96, 12, 241, 58, 76, 246, 48, 5, 138, 22, 178, 32, 8, 134, 117, 219, 216, 27, 120, 97, 152, 6, 100, 64, 106, 154, 186, 137, 90, 191, 211, 159, 186, 14, 154, 7, 37, 0, 0, 0, 0, 195, 210, 5, 30, 5, 40, 190, 8, 82, 47, 14, 207, 153, 179, 185, 231, 208, 246, 73, 40, 130, 242, 24, 88, 220, 158, 67, 221, 87, 236, 240, 102, 248, 24, 82, 13, 136, 192, 223, 165, 61, 91, 193, 230, 114, 252, 166, 249, 254, 182, 154, 244, 83, 249, 107, 83, 140, 114, 0, 150, 147, 139, 40, 52, 178, 185, 20, 254, 147, 121, 74, 47, 94, 164, 128, 190, 240, 175, 244, 104, 98, 2, 253, 35, 208, 19, 163, 96, 96, 28, 160, 144, 194, 87, 217, 205, 125, 153, 242, 142, 63, 212, 218, 84, 22, 128, 27, 253, 119, 181, 226, 203, 123, 115, 37, 202, 144, 184, 36, 153, 179, 80, 125, 190, 159, 82, 233, 53, 6, 89, 153, 86, 122, 77, 39, 8, 0, 23, 137, 169, 160, 111, 111, 41, 54, 243, 23, 56, 129, 142, 244, 248, 52, 189, 79, 1, 238, 157, 242, 96, 232, 163, 74, 49, 75, 165, 210, 180, 165, 87, 128, 168, 4, 37, 0, 0, 0, 0, 195, 210, 5, 30, 69, 217, 93, 106, 240, 26, 132, 252, 70, 221, 209, 54, 163, 75, 124, 43, 63, 193, 94, 104, 165, 248, 118, 226, 39, 229, 179, 8, 9, 237, 100, 11, 136, 192, 223, 165, 61, 91, 193, 230];
    let round2_public_packages_2 = CombinedPublicPackage::deserialize_from(&round2_public_packages_2_bytes[..]).unwrap();
    // let encrypted_secret_package_3 = [175, 244, 104, 98, 2, 253, 35, 208, 19, 163, 96, 96, 28, 160, 144, 194, 87, 217, 205, 125, 153, 242, 142, 63, 212, 218, 84, 22, 128, 27, 253, 119, 138, 188, 227, 85, 173, 71, 128, 164, 121, 47, 116, 135, 251, 66, 89, 208, 1, 0, 0, 0, 136, 0, 0, 0, 94, 63, 106, 230, 117, 200, 233, 80, 28, 109, 234, 102, 201, 131, 210, 214, 127, 14, 180, 24, 215, 156, 40, 69, 126, 198, 239, 9, 227, 178, 182, 123, 36, 180, 97, 233, 216, 225, 199, 99, 89, 121, 137, 146, 112, 33, 156, 90, 38, 34, 220, 149, 133, 63, 214, 136, 245, 0, 5, 168, 105, 194, 42, 178, 11, 145, 142, 253, 245, 9, 120, 255, 45, 127, 168, 81, 30, 240, 6, 149, 228, 24, 50, 202, 94, 102, 123, 193, 107, 37, 24, 22, 65, 100, 194, 149, 5, 217, 245, 52, 100, 182, 10, 29, 242, 74, 209, 128, 98, 197, 219, 76, 63, 54, 147, 1, 60, 126, 239, 245, 175, 50, 206, 249, 166, 43, 176, 81, 77, 144, 137, 251, 157, 228, 170, 161, 200, 242, 229, 7, 22, 7, 89, 127, 11, 177, 58, 54, 41, 37, 122, 224, 113, 184, 167, 18, 59, 43, 141, 45, 231, 100, 58, 88, 65, 177, 202, 160];
    let round2_public_packages_3_bytes = [114, 191, 69, 141, 0, 28, 209, 64, 134, 145, 198, 134, 15, 44, 43, 123, 141, 15, 142, 167, 0, 19, 159, 200, 155, 156, 25, 121, 251, 106, 99, 24, 253, 15, 186, 145, 34, 6, 218, 193, 111, 60, 68, 34, 212, 235, 82, 170, 45, 102, 0, 64, 199, 80, 41, 26, 24, 194, 132, 147, 119, 156, 142, 109, 22, 252, 113, 48, 23, 164, 123, 119, 132, 229, 12, 41, 154, 183, 193, 38, 139, 217, 158, 159, 53, 129, 111, 255, 165, 7, 174, 63, 121, 57, 46, 189, 255, 53, 55, 155, 31, 199, 47, 240, 179, 44, 249, 84, 56, 227, 128, 165, 18, 184, 208, 34, 220, 4, 232, 17, 219, 33, 235, 155, 0, 99, 101, 216, 5, 3, 0, 0, 0, 114, 135, 138, 49, 165, 59, 16, 213, 197, 75, 246, 6, 53, 57, 78, 156, 184, 149, 151, 131, 0, 76, 26, 214, 74, 189, 36, 32, 148, 24, 6, 12, 206, 29, 141, 81, 192, 74, 180, 57, 90, 206, 202, 252, 214, 93, 170, 27, 235, 106, 13, 204, 111, 54, 7, 202, 136, 141, 60, 77, 227, 55, 148, 99, 37, 35, 90, 241, 13, 117, 143, 38, 222, 115, 47, 169, 131, 73, 211, 25, 68, 130, 186, 57, 226, 83, 202, 130, 88, 112, 68, 101, 183, 96, 12, 241, 58, 76, 246, 48, 5, 138, 22, 178, 32, 8, 134, 117, 219, 216, 27, 120, 97, 152, 6, 100, 64, 106, 154, 186, 137, 90, 191, 211, 159, 186, 14, 154, 7, 37, 0, 0, 0, 0, 195, 210, 5, 30, 131, 100, 43, 160, 96, 216, 51, 156, 98, 189, 177, 247, 146, 158, 141, 33, 162, 216, 93, 193, 44, 161, 19, 199, 48, 106, 37, 138, 166, 174, 61, 3, 136, 192, 223, 165, 61, 91, 193, 230, 114, 97, 154, 23, 138, 59, 9, 33, 165, 233, 156, 69, 240, 37, 103, 57, 46, 95, 42, 198, 219, 213, 94, 99, 203, 227, 221, 23, 78, 44, 163, 150, 14, 152, 225, 5, 254, 73, 52, 14, 173, 14, 8, 46, 130, 119, 148, 210, 96, 53, 201, 196, 177, 208, 41, 76, 148, 231, 140, 247, 105, 220, 204, 155, 1, 202, 13, 61, 61, 231, 38, 58, 31, 212, 211, 67, 31, 61, 126, 169, 225, 79, 184, 10, 94, 234, 43, 52, 77, 77, 92, 123, 76, 12, 68, 161, 66, 156, 2, 243, 56, 139, 125, 88, 115, 51, 231, 95, 140, 94, 114, 158, 18, 169, 239, 173, 115, 123, 70, 70, 96, 52, 143, 95, 187, 228, 142, 1, 6, 37, 0, 0, 0, 0, 195, 210, 5, 30, 166, 18, 230, 146, 6, 147, 244, 83, 6, 194, 0, 207, 141, 80, 213, 122, 69, 151, 238, 50, 49, 254, 223, 37, 47, 172, 223, 235, 16, 118, 210, 0, 136, 192, 223, 165, 61, 91, 193, 230, 114, 252, 166, 249, 254, 182, 154, 244, 83, 249, 107, 83, 140, 114, 0, 150, 147, 139, 40, 52, 178, 185, 20, 254, 147, 121, 74, 47, 94, 164, 128, 190, 240, 175, 244, 104, 98, 2, 253, 35, 208, 19, 163, 96, 96, 28, 160, 144, 194, 87, 217, 205, 125, 153, 242, 142, 63, 212, 218, 84, 22, 128, 27, 253, 119, 181, 226, 203, 123, 115, 37, 202, 144, 184, 36, 153, 179, 80, 125, 190, 159, 82, 233, 53, 6, 89, 153, 86, 122, 77, 39, 8, 0, 23, 137, 169, 160, 111, 111, 41, 54, 243, 23, 56, 129, 142, 244, 248, 52, 189, 79, 1, 238, 157, 242, 96, 232, 163, 74, 49, 75, 165, 210, 180, 165, 87, 128, 168, 4, 37, 0, 0, 0, 0, 195, 210, 5, 30, 118, 37, 109, 88, 10, 85, 113, 125, 147, 15, 8, 224, 117, 91, 241, 174, 240, 119, 24, 101, 117, 89, 94, 233, 237, 15, 214, 246, 220, 184, 119, 0, 136, 192, 223, 165, 61, 91, 193, 230];
    let round2_public_packages_3 = CombinedPublicPackage::deserialize_from(&round2_public_packages_3_bytes[..]).unwrap();
    // let encrypted_secret_package_4 = [175, 244, 104, 98, 2, 253, 35, 208, 19, 163, 96, 96, 28, 160, 144, 194, 87, 217, 205, 125, 153, 242, 142, 63, 212, 218, 84, 22, 128, 27, 253, 119, 94, 78, 164, 254, 18, 210, 27, 78, 216, 193, 58, 238, 193, 131, 39, 243, 1, 0, 0, 0, 136, 0, 0, 0, 229, 28, 157, 81, 137, 49, 97, 183, 143, 183, 249, 25, 92, 23, 53, 250, 242, 1, 111, 232, 25, 25, 32, 216, 196, 237, 210, 177, 17, 156, 161, 71, 214, 38, 190, 48, 244, 185, 68, 52, 239, 140, 165, 114, 77, 43, 4, 52, 30, 189, 204, 250, 37, 113, 250, 105, 207, 187, 131, 55, 161, 64, 250, 179, 11, 145, 142, 253, 173, 196, 211, 175, 235, 175, 25, 55, 224, 187, 217, 28, 9, 195, 112, 28, 62, 83, 192, 112, 207, 242, 144, 4, 170, 18, 128, 32, 205, 239, 20, 128, 232, 237, 240, 45, 220, 69, 150, 229, 195, 90, 206, 10, 191, 41, 101, 210, 84, 14, 152, 120, 211, 63, 37, 186, 61, 225, 239, 16, 4, 201, 108, 232, 210, 53, 42, 199, 88, 98, 36, 197, 119, 43, 254, 206, 222, 77, 246, 92, 255, 83, 173, 5, 174, 37, 82, 215, 184, 49, 240, 164, 237, 19, 188, 95, 65, 177, 202, 160];
    let round2_public_packages_4_bytes = [114, 135, 138, 49, 165, 59, 16, 213, 197, 75, 246, 6, 53, 57, 78, 156, 184, 149, 151, 131, 0, 76, 26, 214, 74, 189, 36, 32, 148, 24, 6, 12, 206, 29, 141, 81, 192, 74, 180, 57, 90, 206, 202, 252, 214, 93, 170, 27, 235, 106, 13, 204, 111, 54, 7, 202, 136, 141, 60, 77, 227, 55, 148, 99, 37, 35, 90, 241, 13, 117, 143, 38, 222, 115, 47, 169, 131, 73, 211, 25, 68, 130, 186, 57, 226, 83, 202, 130, 88, 112, 68, 101, 183, 96, 12, 241, 58, 76, 246, 48, 5, 138, 22, 178, 32, 8, 134, 117, 219, 216, 27, 120, 97, 152, 6, 100, 64, 106, 154, 186, 137, 90, 191, 211, 159, 186, 14, 154, 7, 3, 0, 0, 0, 114, 191, 69, 141, 0, 28, 209, 64, 134, 145, 198, 134, 15, 44, 43, 123, 141, 15, 142, 167, 0, 19, 159, 200, 155, 156, 25, 121, 251, 106, 99, 24, 253, 15, 186, 145, 34, 6, 218, 193, 111, 60, 68, 34, 212, 235, 82, 170, 45, 102, 0, 64, 199, 80, 41, 26, 24, 194, 132, 147, 119, 156, 142, 109, 22, 252, 113, 48, 23, 164, 123, 119, 132, 229, 12, 41, 154, 183, 193, 38, 139, 217, 158, 159, 53, 129, 111, 255, 165, 7, 174, 63, 121, 57, 46, 189, 255, 53, 55, 155, 31, 199, 47, 240, 179, 44, 249, 84, 56, 227, 128, 165, 18, 184, 208, 34, 220, 4, 232, 17, 219, 33, 235, 155, 0, 99, 101, 216, 5, 37, 0, 0, 0, 0, 195, 210, 5, 30, 247, 112, 80, 219, 95, 117, 162, 163, 91, 166, 174, 66, 112, 198, 184, 184, 123, 147, 3, 255, 128, 236, 98, 160, 39, 62, 57, 122, 254, 190, 151, 7, 136, 192, 223, 165, 61, 91, 193, 230, 114, 97, 154, 23, 138, 59, 9, 33, 165, 233, 156, 69, 240, 37, 103, 57, 46, 95, 42, 198, 219, 213, 94, 99, 203, 227, 221, 23, 78, 44, 163, 150, 14, 152, 225, 5, 254, 73, 52, 14, 173, 14, 8, 46, 130, 119, 148, 210, 96, 53, 201, 196, 177, 208, 41, 76, 148, 231, 140, 247, 105, 220, 204, 155, 1, 202, 13, 61, 61, 231, 38, 58, 31, 212, 211, 67, 31, 61, 126, 169, 225, 79, 184, 10, 94, 234, 43, 52, 77, 77, 92, 123, 76, 12, 68, 161, 66, 156, 2, 243, 56, 139, 125, 88, 115, 51, 231, 95, 140, 94, 114, 158, 18, 169, 239, 173, 115, 123, 70, 70, 96, 52, 143, 95, 187, 228, 142, 1, 6, 37, 0, 0, 0, 0, 195, 210, 5, 30, 117, 123, 154, 228, 175, 132, 130, 239, 101, 177, 17, 3, 238, 148, 136, 197, 250, 83, 70, 5, 173, 15, 244, 87, 217, 222, 183, 175, 98, 200, 105, 13, 136, 192, 223, 165, 61, 91, 193, 230, 114, 252, 166, 249, 254, 182, 154, 244, 83, 249, 107, 83, 140, 114, 0, 150, 147, 139, 40, 52, 178, 185, 20, 254, 147, 121, 74, 47, 94, 164, 128, 190, 240, 175, 244, 104, 98, 2, 253, 35, 208, 19, 163, 96, 96, 28, 160, 144, 194, 87, 217, 205, 125, 153, 242, 142, 63, 212, 218, 84, 22, 128, 27, 253, 119, 181, 226, 203, 123, 115, 37, 202, 144, 184, 36, 153, 179, 80, 125, 190, 159, 82, 233, 53, 6, 89, 153, 86, 122, 77, 39, 8, 0, 23, 137, 169, 160, 111, 111, 41, 54, 243, 23, 56, 129, 142, 244, 248, 52, 189, 79, 1, 238, 157, 242, 96, 232, 163, 74, 49, 75, 165, 210, 180, 165, 87, 128, 168, 4, 37, 0, 0, 0, 0, 195, 210, 5, 30, 90, 224, 190, 73, 96, 209, 58, 95, 168, 27, 51, 107, 158, 242, 178, 196, 134, 57, 65, 156, 29, 57, 247, 232, 58, 100, 9, 204, 167, 185, 221, 8, 136, 192, 223, 165, 61, 91, 193, 230];
    let round2_public_packages_4 = CombinedPublicPackage::deserialize_from(&round2_public_packages_4_bytes[..]).unwrap();
    let (key_package, public_key_package, group_secret_key) = round3::round3(
        &secret,
        &encrypted_secret_package_1,
        [&package_1, &package_2, &package_3, &package_4],
        [&round2_public_packages_1, &round2_public_packages_2, &round2_public_packages_3, &round2_public_packages_4],
    ).unwrap();
    hprintln!("Heap used {}", HEAP.used()).unwrap();
    hprintln!("key_package {:?}", key_package.serialize().unwrap()).unwrap();
    hprintln!("public_key_package {:?}", public_key_package.serialize()).unwrap();
    hprintln!("group_secret {:?}", group_secret_key).unwrap();

    panic!("End of main");
}
